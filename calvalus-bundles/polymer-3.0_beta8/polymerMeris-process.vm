#!/bin/bash

inFile="$inputFile"
inFileName="$inputFile.name"

#[[
set -e
set -m

minimumsize=100
actualsize=$(du -b parameters.txt | cut -f 1)
if [ $actualsize -lt $minimumsize ]; then
    echo parameters.txt is too small, replacing with defaults
    cp default-parameters.txt parameters.txt
fi
# append newline
echo >> parameters.txt

]]#

#if ($inputRectangle)

#set( $Double = 0.0 )

#set( $Dsline = $inputRectangle.y )
#set( $sline = $Double.valueOf($Dsline).intValue() )

#set( $Deline = $inputRectangle.y + $inputRectangle.height )
#set( $eline = $Double.valueOf($Deline).intValue() )

echo PROCESS_ROWS $sline $eline  >> parameters.txt
echo "CALVALUS_PRODUCT_TRANSFORMATION  subset 0, $inputRectangle.y, $productRectangle.width, $inputRectangle.height flipY"

#end

#[[

POLYMER=./polymer-3.0_beta8
# create links to auxdata
ln -sf ${POLYMER}/auxdata .
ln -sf ${POLYMER}/LUTS .

suffix="hdf"
if grep -E "OUTPUT_FORMAT\ +NETCDF" parameters.txt; then
  suffix="nc"
fi

POLY_PYTHON=./pyhdf
if [ -d ${POLY_PYTHON} ]; then
  export LD_LIBRARY_PATH="${POLY_PYTHON}/pylib"
  export PYTHONPATH="${POLY_PYTHON}/pyshared"
fi
if [ ! -d ${HOME} ]; then
  export HOME=/tmp/
fi
./get_meteo_calvalus.py ${inFileName} >> parameters.txt

# append input,output to parameters.txt
outFile=${inFileName}.polymer.${suffix}
echo INPUT_FILE $inFile >> parameters.txt
echo OUTPUT_FILE $outFile >> parameters.txt

# for debugging purpose
# cat parameters.txt

function handle_progress() {
  line=$1
  echo $line
  if [[ ${line} =~ Processing\ block\ ([0-9]+)x([0-9]+)\ /\ ([0-9]+)x([0-9]+) ]]; then
    px=${BASH_REMATCH[1]}
    py=${BASH_REMATCH[2]}
    nx=${BASH_REMATCH[3]}
    ny=${BASH_REMATCH[4]}

    # y is inner loop, x is outer loop
    progress=$(echo "scale=3; (${py} - 1 + (${px} - 1) * ${ny}) / (${ny} * ${nx})" | bc)
    printf "CALVALUS_PROGRESS %.3f\n" $progress
  fi
}

set -o pipefail
${POLYMER}/polymer parameters.txt | while read x ; do handle_progress "$x" ; done
echo CALVALUS_OUTPUT_PRODUCT ${outFile}
]]#