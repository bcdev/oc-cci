IDL Version 7.1.2, Microsoft Windows (Win32 x86_64 m64). (c) 2009, ITT Visual Information Solutions
Installation number: 87301.
Licensed for use by: Brockmann Consult

IDL> a=[1,2,3,4,1,1,3,3]
IDL>  .compile Intersection.pro
% Error opening file. File: Intersection.pro
Datei existiert nicht: 'intersection.pro'.
% Compiled module: INTERSECTIONSORTEDUNIQUESETS.
% Attempt to call undefined procedure/function: 'INTERSECTION'.
% Execution halted at: $MAIN$          
IDL> rrs_matrix = [[0.00719889,0.00567422,0.00468322,0.00254233,0.00196100,0.000256445],$
IDL> ;                   [0.00709421,0.00560526,0.00464842,0.00256442,0.00196990,0.000251790],$
IDL> rrs_wavelengths = [412,443,488,531,547,667]

rrs_wavelengths = [412,443,488,531,547,667]
                 ^
% Syntax error.
IDL> rrs_wavelengths=[412,443,488,531,547,667]
IDL> rrs_matrix=[0.00719889,0.00567422,0.00468322,0.00254233,0.00196100,0.000256445]
IDL> bandShiftCorrectionSetup, correction_context, sensor='MODISA'
% Attempt to call undefined procedure/function: 'BANDSHIFTCORRECTIONSETUP'.
% Execution halted at: $MAIN$          
IDL> weightedAverageEqualCorrectionProducts,  rrs_matrix, rrs_wavelengths, []

weightedAverageEqualCorrectionProducts,  rrs_matrix, rrs_wavelengths, []
                                                                        ^
% Syntax error.
IDL> rrs_corrected_matrix=[0.00719889,0.00567422,0.00468322,0.00254233,0.00196100,0.000256445]
IDL> rrs_corrected_wavelengths=[412,443,488,531,547,667]
IDL> rrs_dimension = size(rrs_corrected_matrix,/dimension)
IDL> print rrs_dimension = size(rrs_corrected_matrix,/dimension)

print rrs_dimension = size(rrs_corrected_matrix,/dimension)
       ^
% Syntax error.
IDL> print, rrs_dimension = size(rrs_corrected_matrix,/dimension)
% Keyword RRS_DIMENSION not allowed in call to: PRINT
% Execution halted at: $MAIN$          
IDL> print, rrs_dimenson
% PRINT: Variable is undefined: RRS_DIMENSON.
% Execution halted at: $MAIN$          
IDL> print, rrs_dimension
           6
IDL> if (n_elements(rrs_dimension)) GT 1 then n_bins = (size(rrs_corrected_matrix,/dimension))[1] else n_bins = 1
IDL> print, n_bins
       1
IDL> n_rrs_corrected_wavelengths = n_elements(rrs_corrected_wavelengths)
IDL> print, n_rrs_corrected_wavelengths
           6
IDL> non_doubles = make_array(n_rrs_corrected_wavelengths,value=1,/int)
IDL> print, non_doubles
       1       1       1       1       1       1
IDL> sorted_rrs_corrected_wavelengths = rrs_corrected_wavelengths(sort(rrs_corrected_wavelengths))
IDL> print, sorted_rrs_corrected_wavelengths
     412     443     488     531     547     667
IDL> unique_indexes = uniq(sorted_rrs_corrected_wavelengths)
% Compiled module: UNIQ.
IDL> print, unique_indexes
           0           1           2           3           4           5
IDL> w=[20,20,30,40,10]
IDL> ui=w(sort(w))
IDL> print, ui
      10      20      20      30      40
IDL> rui=uniq(ui)
IDL> print, rui
           0           2           3           4
IDL> n_unique = n_elements(unique_indexes)
IDL> print, n_unique
           6
IDL> compare_indexes = 0
IDL> if n_unique GT 1 then compare_indexes = [compare_indexes,unique_indexes[0:n_unique-2]+1]
IDL> print, compare_indexes
           0           1           2           3           4           5
IDL> compare_indexes = 0
IDL> if n_unique GT 1 then compare_indexes = [compare_indexes,rui[0:4-2]+1]
IDL> print, compare_indexes
           0           1           3           4
IDL> if n_unique GT 1 then compare_indexes = [compare_indexes,unique_indexes[0:n_unique-2]+1]
IDL> print, compare_indexes
           0           1           3           4           1           2           3           4           5
IDL> rrs_corrected_wavelengths=[413., 510., 490., 510., 560., 555., 665., 670.]
IDL> n_rrs_corrected_wavelengths = n_elements(rrs_corrected_wavelengths)
IDL> print, n_rrs_corrected_wavelengths
           8
IDL> non_doubles = make_array(n_rrs_corrected_wavelengths,value=1,/int)
IDL> print, non_doubles
       1       1       1       1       1       1       1       1
IDL> sorted_rrs_corrected_wavelengths = rrs_corrected_wavelengths(sort(rrs_corrected_wavelengths))
IDL> print, sorted_rrs_corrected_wavelengths
      413.000      490.000      510.000      510.000      555.000      560.000      665.000      670.000
IDL> unique_indexes = uniq(sorted_rrs_corrected_wavelengths)
IDL> print, unique_indexes
           0           1           3           4           5           6           7
IDL> n_unique = n_elements(unique_indexes)
IDL> compare_indexes = 0
IDL> if n_unique GT 1 then compare_indexes = [compare_indexes,unique_indexes[0:n_unique-2]+1]
IDL> print, compare_indexes
           0           1           2           4           5           6           7
IDL> double_index = where(unique_indexes NE compare_indexes,n_doubles)
IDL> print, double_index
           2
IDL> print, n_doubles
           1
IDL> doubles = sorted_rrs_corrected_wavelengths[unique_indexes[double_index]]
IDL> print, doubles
      510.000
IDL> double_wl=510.
IDL> wavelength_index = where(rrs_corrected_wavelengths EQ double_wl)
IDL> print, wavelength_index
           1           3
IDL> non_doubles[wavelength_index] = 0
IDL> print, non_doubles
       1       0       1       0       1       1       1       1
IDL> non_doubles[wavelength_index[0]] = 1
IDL> print, non_doubles
       1       1       1       0       1       1       1       1
IDL>  wl_index = where(rrs_corrected_wavelengths EQ double_wl)
IDL> print, wl_index
           1           3
IDL> if total(wl_index - wavelength_index) NE 0 then STOP, 'rrs wavelengths must match one on one to output wavelengths of correction context' 
IDL> print, total(wl_index - wavelength_index)
     0.000000
IDL> print, wavelength_index[0]
           1
IDL>      lambda_i = [412., 488., 488., 531., 547., 547., 667., 667.]
IDL>       lambda_o = [413., 510., 490., 510., 560., 555., 665., 670.]
IDL>  input_wl=lambda_i[wl_index]
IDL> print, input_wl
      488.000      531.000
IDL> rel_weight = (1 - (abs(input_wl - double_wl)/total(abs(input_wl-double_wl))))/(n_wl - 1) 
% Variable is undefined: N_WL.
% Execution halted at: $MAIN$          
IDL>  wl_index = where(rrs_corrected_wavelengths EQ double_wl, n_wl)
IDL> print, n_wl
           2
IDL> rel_weight = (1 - (abs(input_wl - double_wl)/total(abs(input_wl-double_wl))))/(n_wl - 1) 
IDL> print, rel_weight
     0.488372     0.511628
IDL> print, total(rebin(rel_weight,n_wl,n_bins) * rrs_corrected_matrix[wavelength_index,*],1)
   0.00407186
IDL> rrs_corrected_matrix[wavelength_index[0],*] = total(rebin(rel_weight,n_wl,n_bins) * rrs_corrected_matrix[wavelength_index,*],1)
IDL> print, rrs_corrected_matrix
   0.00719889   0.00407186   0.00468322   0.00254233   0.00196100  0.000256445
IDL> rrs_corrected_matrix = rrs_corrected_matrix[where(non_doubles EQ 1),*]
IDL> print, rrs_corrected_matrix
   0.00719889   0.00407186   0.00468322   0.00196100  0.000256445  0.000256445  0.000256445
IDL> rrs_corrected_wavelengths = rrs_corrected_wavelengths[where(non_doubles EQ 1)]
IDL> print,rrs_corrected_wavelengths
      413.000      510.000      490.000      560.000      555.000      665.000      670.000
